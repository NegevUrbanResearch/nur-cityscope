services:
  nur-api: # This is the main API service (previously named "web")
    container_name: nur-api
    build: ./nur-io/django_api/.
    ports:
      - "${API_PORT}:9900" # Uses the API_PORT variable from the .env file
    env_file:
      - .env # Declares the .env file here
    volumes:
      - ./nur-io/django_api/.:/app
      - ./init.sh:/app/init.sh
      - nur-api_data:/app/data
      - media_files:/app/media # Share media files with nginx
    depends_on:
      - db
    command:
      [
        "sh",
        "-c",
        "cp /app/init.sh /tmp/init.sh && chmod +x /tmp/init.sh && /tmp/init.sh",
      ]
    networks:
      - nur_core

  dashboard-builder:
    container_name: dashboard_builder
    build:
      context: ./nur-front/frontend
      dockerfile: Dockerfile
      args:
        - REACT_APP_MAPBOX_ACCESS_TOKEN=${REACT_APP_MAPBOX_ACCESS_TOKEN}
    environment:
      - REACT_APP_MAPBOX_ACCESS_TOKEN=${REACT_APP_MAPBOX_ACCESS_TOKEN}
    env_file:
      - .env
    volumes:
      - dashboard_build:/app/build-volume # Mount the volume to share the build
    networks:
      - nur_core

  nginx:
    build:
      context: ./nginx
      dockerfile: Dockerfile
    container_name: nginx-front
    env_file:
      - .env
    volumes:
      - ./nur-projection/frontend:/usr/share/nginx/html/nur-projection/frontend
      - ./nur-remote-controller/frontend:/usr/share/nginx/html/nur-remote-controller/frontend
      - dashboard_build:/usr/share/nginx/html/nur-front/frontend
      - media_files:/usr/share/nginx/html/media # Mount the shared media volume
    ports:
      - "${FRONT_PORT}:80"
    depends_on:
      - nur-api
      - dashboard-builder
    restart: always # Add restart policy to ensure it restarts if it crashes
    networks:
      - nur_core

  db:
    container_name: db
    image: postgres:latest
    env_file:
      - .env
    volumes:
      - postgres_data_core:/var/lib/postgresql/data
    networks:
      - nur_core

  redis:
    image: redis:alpine
    container_name: redis-cs
    # ports:
    #   - "6379:6379"
    restart: always
    networks:
      - nur_core

networks:
  nur_core:
    name: nur_core
    driver: bridge
    driver_opts:
      com.docker.network.bridge.name: nur_core
    labels:
      com.docker.compose.network: "nur_core"
    # This ensures the network is recreated if it exists
    external: false

volumes:
  postgres_data_core:
  dashboard_build:
  nur-api_data: # New volume for persistent nur-api data
  media_files: # New volume for sharing media files
